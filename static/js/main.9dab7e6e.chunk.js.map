{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers.ts","components/AddTodoForm/AddTodoForm.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","map","getUserById","find","inputValidetionExpression","AddTodoForm","state","todoTitle","selectedUserId","isUserSelected","isTitleEntered","isInputValid","isInputLengthCorrect","changeIputHandler","event","value","target","inputValue","replace","setState","length","test","selectUserHandler","Number","formSubmit","preventDefault","trim","newTodo","Math","max","usersFromServer","props","addTodo","clearForm","this","onSubmit","type","onChange","placeholder","htmlFor","disabled","selected","hidden","React","Component","preparedTodos","todosFromServer","App","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dab7e6e.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\n\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <div className=\"user-info\">\n    <div>\n      <span className=\"user-info__name\">Name:</span>\n      <span className=\"user-info__name-value\">{user.name}</span>\n    </div>\n    <div>\n      <span className=\"user-info__email\">Email:</span>\n      <a href={`mailto:${user.email}`}>{user.email}</a>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: PreparedTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <div className=\"todo-info\">\n    {todo.user && <UserInfo user={todo.user} />}\n    <div className=\"todo-info__task-block\">\n      <span className=\"todo-info__task\">Task:</span>\n      <span className=\"todo-info__task-text\">{todo.title}</span>\n    </div>\n    <div>\n      <span className=\"todo-info__status\">Status:</span>\n      <span className={cn(\n        {\n          'todo-info__status--completed': todo.completed,\n          'todo-info__status--uncompleted': !todo.completed,\n        },\n      )}\n      >\n        {todo.completed ? 'completed' : 'incompleted'}\n      </span>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n        className={cn(\n          {\n            'todo-list__item todo-list__item--completed': todo.completed,\n            'todo-list__item': !todo.completed,\n          },\n        )}\n      >\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","import users from './api/users';\n\nexport const getUserById = (userId: number) => users.find(\n  user => user.id === userId,\n);\n","import React from 'react';\nimport './AddTodoForm.scss';\n\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../helpers';\n\nconst maxInputLength = 30;\nconst inputValidetionExpression = /[^\\da-zа-яё\\s]/gi;\n\ntype Props = {\n  addTodo: (newTodo: PreparedTodo) => void,\n};\n\ntype State = {\n  todoTitle: string,\n  selectedUserId: number;\n  isUserSelected: boolean,\n  isTitleEntered: boolean,\n  isInputValid: boolean,\n  isInputLengthCorrect: boolean,\n};\n\nexport class AddTodoForm extends React.Component<Props, State> {\n  state: State = {\n    todoTitle: '',\n    selectedUserId: 0,\n    isUserSelected: true,\n    isTitleEntered: true,\n    isInputValid: true,\n    isInputLengthCorrect: true,\n  };\n\n  changeIputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const inputValue: string = value.replace(inputValidetionExpression, '');\n\n    this.setState({\n      isTitleEntered: true,\n      isInputValid: true,\n      isInputLengthCorrect: true,\n    });\n\n    if (value.length > maxInputLength) {\n      this.setState({ isInputLengthCorrect: false });\n    }\n\n    if (inputValidetionExpression.test(value)) {\n      this.setState({ isInputValid: false });\n    }\n\n    if ((value.length <= maxInputLength) && !(inputValidetionExpression.test(value))) {\n      this.setState({\n        todoTitle: inputValue,\n      });\n    }\n  };\n\n  selectUserHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n    const id = Number(value);\n\n    this.setState({\n      selectedUserId: id,\n      isUserSelected: true,\n    });\n  };\n\n  formSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { todoTitle, selectedUserId } = this.state;\n    const title = todoTitle.trim();\n\n    this.setState({\n      isInputValid: true,\n    });\n\n    if (!title.length) {\n      this.setState({\n        todoTitle: '',\n        isTitleEntered: false,\n      });\n    }\n\n    if (!selectedUserId) {\n      this.setState({\n        isUserSelected: false,\n      });\n    }\n\n    if (title.length && selectedUserId) {\n      const newTodoId = Math.max(...usersFromServer.map(user => user.id)) + 1;\n      const newTodo = {\n        userId: selectedUserId,\n        id: newTodoId,\n        title,\n        completed: false,\n        user: getUserById(selectedUserId) || null,\n      };\n\n      this.props.addTodo(newTodo);\n\n      this.clearForm();\n    }\n  };\n\n  clearForm = () => {\n    this.setState({\n      todoTitle: '',\n      selectedUserId: 0,\n      isUserSelected: true,\n      isTitleEntered: true,\n      isInputValid: true,\n      isInputLengthCorrect: true,\n    });\n  };\n\n  render() {\n    const {\n      todoTitle,\n      selectedUserId,\n      isUserSelected,\n      isTitleEntered,\n      isInputValid,\n      isInputLengthCorrect,\n    } = this.state;\n\n    return (\n      <div className=\"form\">\n        <form\n          className=\"form__content\"\n          onSubmit={this.formSubmit}\n        >\n          <p className=\"form__title\">Title:</p>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            value={todoTitle}\n            onChange={this.changeIputHandler}\n            placeholder=\"Please input the title...\"\n          />\n          <p className=\"form__warning\">\n            {!isInputLengthCorrect && (\n              <span className=\"form__warning-message\">{`*Title max length is ${maxInputLength} characters!`}</span>\n            )}\n            {(!isInputValid && isInputLengthCorrect) && (\n              <span className=\"form__warning-message\">*Use only letters, digits or backspaces please!</span>\n            )}\n            {!isTitleEntered && (\n              <span className=\"form__warning-message\">*Please enter a title!</span>\n            )}\n          </p>\n          <p className=\"form__title form__title--user\">User:</p>\n          <label htmlFor=\"userSelect\">\n            <select\n              className=\"form__input form__input--select\"\n              id=\"userSelect\"\n              value={selectedUserId}\n              onChange={this.selectUserHandler}\n            >\n              <option\n                value=\"0\"\n                disabled\n                selected\n                hidden\n              >\n                ---Choose user---\n              </option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <p className=\"form__warning\">\n            {!isUserSelected && (\n              <span className=\"form__warning-message\">*Please choose the user!</span>\n            )}\n          </p>\n          <div className=\"form__submit\">\n            <button type=\"submit\" className=\"form__button\">\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm';\n\nconst preparedTodos: PreparedTodo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\ntype State = {\n  todos: PreparedTodo[],\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    todos: preparedTodos,\n  };\n\n  addTodo = (newTodo: PreparedTodo) => {\n    this.setState(state => ({\n      todos: [...state.todos, newTodo],\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <>\n        <AddTodoForm addTodo={this.addTodo} />\n        <TodoList todos={todos} />\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}